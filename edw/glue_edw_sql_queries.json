[{
    "name": "AMAZON", 
    "parent_sql": "with temp1 as (SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success' as job_status", 
	"isbn_sql":"select * from (select e_product_id, product_type from {mda_table} union select p_product_id, product_type from {mda_table} union select p_backup_product_id, product_type from {mda_table}) a where length(e_product_id)<=13",
    "DimOrder_sql":"select internal_order_id, internal_invoice_number, external_order_id, external_invoice_number, external_trannumber, 'NA' as business_model, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id, external_invoice_number order by 'A') as rank, internal_order_number as internal_order_id, external_purchase_order as external_order_id, internal_invoice_number, external_invoice_number, external_transaction_number as external_trannumber, source_id as source, {0} as audit_key from orders)a where a.rank=1)b", 
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_location_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, cast(publisher_price_ori as decimal(16, 3)) as publisher_price, publisher_price_ori_currency as publisher_currency, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, price_type as list_price_type, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, case when ex_currencies !='NA' then split(ex_currencies, '/')[0]  else ex_currencies end as exchange_from_currency, case when ex_currencies !='NA' then split(ex_currencies, '/')[1] else ex_currencies end as exchange_to_currency, cast(ex_rate as decimal(7, 3)) as exchange_rate, cast(units as int) as units, cast(old_rental_duration as int) as old_rental_duration, cast(new_rental_duration as int) as rental_duration, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, cast('false' as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source) and a.external_invoice_number=b.external_invoice_number", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_price, publisher_currency, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, exchange_from_currency, exchange_to_currency, exchange_rate, units, discount_perct, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_price, publisher_currency, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, exchange_from_currency, exchange_to_currency, exchange_rate, units, discount_perct, is_print_on_demand, audit_key from {staging_fol_table}"
}, 
{
    "name": "BARNES", 
    "parent_sql": "with temp1 as(SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success' as job_status ", 
    "DimOrder_sql":"select internal_order_id, internal_invoice_number, external_order_id, external_invoice_number, external_trannumber, 'NA' as business_model, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id, external_purchase_order, external_invoice_number order by 'A') as rank, internal_order_number as internal_order_id, external_purchase_order as external_order_id, internal_invoice_number, external_invoice_number, external_transaction_number as external_trannumber, source_id as source, {0} as audit_key from orders)a where a.rank=1)b", 
	"isbn_sql":"select e_product_id, product_type from {mda_table} where length(e_product_id)<=13", 
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_location_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, price_type as list_price_type, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, payment_amount_currency as exchange_from_currency, cast(units as int) as units, cast('false' as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source) and a.external_purchase_order=b.external_order_id and a.external_invoice_number=b.external_invoice_number", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, exchange_from_currency, units, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, exchange_from_currency, units, is_print_on_demand, audit_key from {staging_fol_table}"
}, 
{
    "name": "FOLLETT", 
    "parent_sql": "with temp1 as(SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status ", 
    "DimOrder_sql":"select internal_order_id, external_order_id, internal_invoice_number, external_invoice_number, external_trannumber, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id, external_purchase_order, external_transaction_number order by 'A') as rank, internal_order_number as internal_order_id, external_purchase_order as external_order_id, internal_invoice_number, external_invoice_number, external_transaction_number as external_trannumber, source_id as source, {0} as audit_key from orders)a where a.rank=1)b", 
	"isbn_sql":"select e_product_id, product_type from {mda_table} union select e_backup_product_id, product_type from {mda_table}", 
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_location_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, price_type as list_price_type, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, payment_amount_currency as exchange_from_currency, cast(units as int) as units, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, cast('false' as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source) and a.external_purchase_order=b.external_order_id and a.external_transaction_number=b.external_trannumber", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, exchange_from_currency, units, discount_perct, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, exchange_from_currency, units, discount_perct, is_print_on_demand, audit_key from {staging_fol_table}"
}, 
{
    "name": "EBSCO", 
    "parent_sql": "with temp1 as (SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status ", 
    "DimOrder_sql":"select internal_order_id, internal_invoice_number, external_order_id, external_invoice_number, external_trannumber, 'NA' as business_model, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id, external_purchase_order order by 'A') as rank, internal_order_number as internal_order_id, external_purchase_order as external_order_id, internal_invoice_number, external_invoice_number, external_transaction_number as external_trannumber, source_id as source, {0} as audit_key from orders)a where a.rank=1)b", 
	"isbn_sql":"select e_product_id, product_type from {mda_table} union select e_backup_product_id, product_type from {mda_table} union select p_product_id, product_type from {mda_table} union select p_backup_product_id, product_type from {mda_table}", 
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_location_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, cast(publisher_price_ori as decimal(16, 3)) as publisher_price, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, price_type as list_price_type, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, cast(units as int) as units, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, cast('false' as boolean) as is_print_on_demand, drm_model as drm, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source) and a.external_purchase_order=b.external_order_id", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_price, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, units, discount_perct, is_print_on_demand, drm, audit_key) select order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_price, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, units, discount_perct, is_print_on_demand, drm, audit_key from {staging_fol_table}"
}, 
{
    "name": "PROQUEST", 
    "parent_sql": "with temp1 as (SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status", 
    "DimOrder_sql":"select external_order_id, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id, external_purchase_order order by 'a') as rank, external_purchase_order as external_order_id, source_id as source, {0} as audit_key  from orders)a where a.rank=1)b", 
	"isbn_sql":"select e_product_id, product_type from {mda_table} union select e_backup_product_id, product_type from {mda_table} union select p_product_id, product_type from {mda_table}", 
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_location_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, price_currency as  publisher_currency, publisher_price_ori as publisher_price, price_currency as list_price_currency, cast(list_price_multiplier as decimal(16, 3)) as list_price_multipler, cast(price as decimal(16, 3)) as list_price, price_type as list_price_type, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, payment_amount_currency as exchange_from_currency, cast(units as int) as units, disc_code as discount_code, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, cast('false' as boolean) as is_print_on_demand, drm_model as drm, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source) and a.external_purchase_order=b.external_order_id", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_currency, publisher_price, list_price_currency, list_price_multipler, list_price, list_price_type, payment_currency, payment_amount, exchange_from_currency, units, discount_code, discount_perct, is_print_on_demand, drm, audit_key) select order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_currency, publisher_price, list_price_currency, list_price_multipler, list_price, list_price_type, payment_currency, payment_amount, exchange_from_currency, units, discount_code, discount_perct, is_print_on_demand, drm, audit_key from {staging_fol_table}"
}, 
{
    "name": "REDSHELF", 
    "parent_sql": "with temp1 as (SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status ", 
    "DimOrder_sql":"select internal_order_id, internal_invoice_number, external_order_id, internal_invoice_number, external_invoice_number, external_trannumber, 'NA' as business_model, source, cast(audit_key as bigint) as audit_key from(select * from (select source_id, row_number() over(partition by source_id order by 'A') as rank, internal_order_number as internal_order_id, external_purchase_order as external_order_id, internal_invoice_number, external_invoice_number, external_transaction_number as external_trannumber, source_id as source, {0} as audit_key from orders)a where a.rank=1)b", 
	"isbn_sql":"select e_product_id, product_type from {mda_table} union select regexp_replace(p_product_id, '-', ''), product_type from {mda_table}", 	
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_location_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, price_type as list_price_type, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, cast(units as int) as units, cast(new_rental_duration as int) as rental_duration, cast('false' as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source)", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, units, rental_duration, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, units, rental_duration, is_print_on_demand, audit_key from {staging_fol_table}"
}, 
{
    "name": "GARDNERS", 
    "parent_sql": "with temp1 as (SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status ", 
    "DimOrder_sql":"select internal_order_id, internal_invoice_number, external_order_id, internal_invoice_number, external_invoice_number, external_trannumber, 'NA' as business_model, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id order by 'A') as rank, internal_order_number as internal_order_id, external_purchase_order as external_order_id, internal_invoice_number, external_invoice_number, external_transaction_number as external_trannumber, source_id as source, {0} as audit_key from orders)a where a.rank=1)b", 
	"isbn_sql":"select e_product_id, product_type from {mda_table}", 	
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_location_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, price_type as list_price_type, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, cast(units as int) as units, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, cast('false' as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source)", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, units, discount_perct, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, units, discount_perct, is_print_on_demand, audit_key from {staging_fol_table}"
}, 
{
    "name": "CHEGG", 
    "parent_sql": "with temp1 as (SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status ", 
    "DimOrder_sql":"select 'NA' as external_order_id, 'NA' as business_model, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id order by 'A') as rank, source_id as source, {0} as audit_key from orders)a where a.rank=1) b", 
	"isbn_sql":"select e_product_id, product_type from {mda_table} union select e_backup_product_id, product_type from {mda_table} union select p_product_id, product_type from {mda_table} union select p_backup_product_id, product_type from {mda_table}", 	
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_location_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, price_type as list_price_type, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, cast(units as int) as units, cast(old_rental_duration as int) as old_rental_duration, cast(new_rental_duration as int) as rental_duration, disc_code as discount_code, cast('false' as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source)", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, units, old_rental_duration, rental_duration, discount_code, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, units, old_rental_duration, rental_duration, discount_code, is_print_on_demand, audit_key from {staging_fol_table}"
}, 
{
    "name": "UBW", 
    "parent_sql": "with temp1 as (SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status ", 
    "DimOrder_sql":"select cast(internal_order_number as string) as internal_order_id, 'NA' as external_order_id, cast(internal_invoice_number as string) as internal_invoice_number, external_invoice_number, external_transaction_number as external_trannumber, 'B2C' as business_model, source, cast(audit_key as bigint) as audit_key from (select * from (select source_id, row_number() over(partition by source_id, internal_invoice_number order by 'a') as rank, external_invoice_number, external_transaction_number, internal_invoice_number, internal_order_number, aggregator_name as source, {0} as audit_key from orders) a where a.rank=1) b", 
	"isbn_sql":"select e_product_id, product_type from {mda_table} union select e_backup_product_id, product_type from {mda_table} union select p_product_id, product_type from {mda_table} union select p_backup_product_id, product_type from {mda_table}",
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_location_skey, fulfilment_party_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type as sale_type, product_type as product_format_code, price_currency as publisher_currency, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, payment_amount_currency as exchange_from_currency, cast(units as int) as units, disc_code as discount_code, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, cast('false' as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on a.internal_invoice_number=b.internal_invoice_number", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_location_skey, fulfilment_party_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_currency, list_price_currency, list_price, payment_currency, payment_amount, exchange_from_currency, units, discount_code, discount_perct, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_location_skey, fulfilment_party_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_currency, list_price_currency, list_price, payment_currency, payment_amount, exchange_from_currency, units, discount_code, discount_perct, is_print_on_demand, audit_key from {staging_fol_table} "
}, 
{
    "name": "OMS", 
    "parent_sql": "with temp1 as (SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status", 
    "DimOrder_sql":"select cast(internal_order_id as string) as internal_order_id, cast(internal_invoice_number as string) as internal_invoice_number, external_order_id, case when sub_domain in ('GOBI', 'OASIS', 'RIALTO') then 'B2B' else 'B2C' end as business_model, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id, internal_order_number, internal_invoice_number, external_purchase_order order by 'A') as rank, internal_order_number as internal_order_id, case when external_purchase_order is null then 'NA' else substr(external_purchase_order, 0, 100) end as external_order_id, sub_domain, internal_invoice_number, source_id as source, {0} as audit_key from orders)a where a.rank=1)b", 
	"isbn_sql":"select e_product_id, product_type from mda_data_lake.{mda_table}", 
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_party_skey, buyer_location_skey, fulfilment_party_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, price_currency as publisher_currency, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, price_type as list_price_type, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, payment_amount_currency as exchange_from_currency, cast(units as int) as units, disc_code as discount_code, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, cast('false' as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source) and a.internal_order_number=b.internal_order_id and a.internal_invoice_number=b.internal_invoice_number and a.external_purchase_order=b.external_order_id", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_party_skey, buyer_location_skey, fulfilment_party_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_currency, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, exchange_from_currency, units, discount_code, discount_perct, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_party_skey, buyer_location_skey, fulfilment_party_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_currency, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, exchange_from_currency, units, discount_code, discount_perct, is_print_on_demand, audit_key from {staging_fol_table}"
}, 
{
    "name": "USPT", 
    "parent_sql": "with temp1 as (SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status", 
    "DimOrder_sql":"select internal_order_id, external_order_id, internal_invoice_number, external_invoice_number, 'NA' as business_model, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id, external_invoice_number order by 'A') as rank, internal_order_number as internal_order_id, 'NA' as external_order_id, internal_invoice_number, external_invoice_number, source_id as source, {0} as audit_key from orders)a where a.rank=1)b", 
	"isbn_sql":"select p_product_id, product_type from {mda_table} union select p_backup_product_id, product_type from {mda_table}", 
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_party_skey, buyer_location_skey, fulfilment_party_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, cast(publisher_price_ori as decimal(16, 3)) as publisher_price, publisher_price_ori_currency as publisher_currency, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, payment_amount_currency as exchange_from_currency, cast(demand_units as int) as demand_units, cast(units as int) as units, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, cast(pod as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source) and a.external_invoice_number=b.external_invoice_number", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_party_skey, buyer_location_skey, fulfilment_party_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_price, publisher_currency, list_price_currency, list_price, payment_currency, payment_amount, exchange_from_currency, demand_units, units, discount_perct, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_party_skey, buyer_location_skey, fulfilment_party_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_price, publisher_currency, list_price_currency, list_price, payment_currency, payment_amount, exchange_from_currency, demand_units, units, discount_perct, is_print_on_demand, audit_key from {staging_fol_table}"
}, 
{
    "name": "UKBP", 
    "parent_sql": "SELECT a.* from agg_tab a", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status ", 
    "DimOrder_sql":"select internal_order_id, external_order_id, internal_invoice_number, external_invoice_number, 'NA' as business_model, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id, external_invoice_number order by 'A') as rank, internal_order_number as internal_order_id, 'NA' as external_order_id, internal_invoice_number, external_invoice_number, source_id as source, {0} as audit_key  from orders)a where a.rank=1)b", 
	"isbn_sql":"select p_product_id, product_type from {mda_table} union select p_backup_product_id, product_type from {mda_table}", 
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_party_skey, fulfilment_party_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, cast(publisher_price_ori as decimal(16, 3)) as publisher_price, publisher_price_ori_currency as publisher_currency, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, case when ex_currencies !='NA' then split(ex_currencies, '/')[0]  else ex_currencies end as exchange_from_currency, case when ex_currencies !='NA' then split(ex_currencies, '/')[1] else ex_currencies end as exchange_to_currency, cast(ex_rate as decimal(7, 3)) as exchange_rate, cast(demand_units as int) as demand_units, cast(units as int) as units, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, case when pod='Y' then cast('true' as boolean) else cast('false' as boolean) end as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source) and a.external_invoice_number=b.external_invoice_number", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_party_skey, buyer_location_skey, fulfilment_party_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_price, publisher_currency, list_price_currency, list_price, payment_currency, payment_amount, exchange_from_currency, exchange_to_currency, exchange_rate, demand_units, units, discount_perct, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_party_skey, {location_skey}, fulfilment_party_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_price, publisher_currency, list_price_currency, list_price, payment_currency, payment_amount, exchange_from_currency, exchange_to_currency, exchange_rate, demand_units, units, discount_perct, is_print_on_demand, audit_key from {staging_fol_table}"
}, 
{
    "name": "SGBM", 
    "parent_sql": "SELECT a.* FROM agg_tab a", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status ", 
    "DimOrder_sql":"select internal_order_id, external_order_id, internal_invoice_number, external_invoice_number, 'NA' as business_model, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id, external_invoice_number order by 'A') as rank, internal_order_number as internal_order_id, 'NA' as external_order_id, internal_invoice_number, external_invoice_number, source_id as source, {0} as audit_key  from orders)a where a.rank=1)b", 
	"isbn_sql":"select p_product_id, product_type from {mda_table} union select p_backup_product_id, product_type from {mda_table}", 
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_party_skey, fulfilment_party_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, cast(publisher_price_ori as decimal(16, 3)) as publisher_price, publisher_price_ori_currency as publisher_currency, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, case when ex_currencies !='NA' then split(ex_currencies, '/')[0]  else ex_currencies end as exchange_from_currency, case when ex_currencies !='NA' then split(ex_currencies, '/')[1] else ex_currencies end as exchange_to_currency, cast(ex_rate as decimal(7, 3)) as exchange_rate, cast(demand_units as int) as demand_units, cast(units as int) as units, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, cast(pod as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source) and a.external_invoice_number=b.external_invoice_number",
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_party_skey, buyer_location_skey, fulfilment_party_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_price, publisher_currency, list_price_currency, list_price, payment_currency, payment_amount, exchange_from_currency, exchange_to_currency, exchange_rate, demand_units, units, discount_perct, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_party_skey, {location_skey}, fulfilment_party_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_price, publisher_currency, list_price_currency, list_price, payment_currency, payment_amount, exchange_from_currency, exchange_to_currency, exchange_rate, demand_units, units, discount_perct, is_print_on_demand, audit_key from {staging_fol_table}"
}, 
{
    "name": "AUSTLD", 
    "parent_sql": "SELECT a.* FROM agg_tab a", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status ", 
    "DimOrder_sql":"select internal_order_id, external_order_id, internal_invoice_number, external_invoice_number, 'NA' as business_model, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id, external_purchase_order order by 'A') as rank, internal_order_number as internal_order_id, external_purchase_order as external_order_id, internal_invoice_number, external_invoice_number, source_id as source, {0} as audit_key  from orders)a where a.rank=1)b", 
	"isbn_sql":"select p_product_id, product_type from {mda_table} union select p_backup_product_id, product_type from {mda_table}", 
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_party_skey, fulfilment_party_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, cast(publisher_price_ori as decimal(16, 3)) as publisher_price, publisher_price_ori_currency as publisher_currency, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, case when ex_currencies !='NA' then split(ex_currencies, '/')[0]  else ex_currencies end as exchange_from_currency, case when ex_currencies !='NA' then split(ex_currencies, '/')[1] else ex_currencies end as exchange_to_currency, cast(ex_rate as decimal(7, 3)) as exchange_rate, cast(demand_units as int) as demand_units, cast(units as int) as units, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, cast(pod as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source) and a.external_purchase_order=b.external_order_id", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_party_skey, buyer_location_skey, fulfilment_party_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_price, publisher_currency, list_price_currency, list_price, payment_currency, payment_amount, exchange_from_currency, exchange_to_currency, exchange_rate, demand_units, units, discount_perct, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_party_skey, {location_skey}, fulfilment_party_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, publisher_price, publisher_currency, list_price_currency, list_price, payment_currency, payment_amount, exchange_from_currency, exchange_to_currency, exchange_rate, demand_units, units, discount_perct, is_print_on_demand, audit_key from {staging_fol_table}"
},
{
    "name": "BLACKWELLS", 
    "parent_sql": "with temp1 as (SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode  FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status ", 
    "DimOrder_sql":"select internal_order_id, internal_invoice_number, external_order_id, external_invoice_number, external_trannumber, 'NA' as business_model, source, cast(audit_key as bigint) as audit_key from (select * from (select row_number() over(partition by source_id, external_purchase_order order by 'A') as rank, internal_order_number as internal_order_id, external_purchase_order as external_order_id, internal_invoice_number, external_invoice_number, external_transaction_number as external_trannumber, source_id as source, {0} as audit_key from orders) a where a.rank = 1)b",
	"isbn_sql":"select e_product_id, product_type from {mda_table}", 	
	"FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_location_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, price_type as list_price_type, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, cast(units as int) as units, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, cast('false' as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source) and a.external_purchase_order=b.external_order_id", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, units, discount_perct, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, units, discount_perct, is_print_on_demand, audit_key from {staging_fol_table}"
},
{
    "name": "INGRAM", 
    "parent_sql": "with temp1 as (SELECT a.*, b.location_skey as buyer_location_skey, b.region, b.sub_region, b.area, b.country_iso2_code, b.country_iso3_code, b.country, b.state, b.city, b.postcode  FROM agg_tab a left join dimlocation b on trim(substr(a.country, 1, 2))=trim(b.country_iso2_code)) select * from temp1", 
    "DimAudit_sql":"select '{0}' as source, 'Orders' as destination, '{1}' as etl_job, current_timestamp() as start_time, current_timestamp() as end_time, 'success'as job_status ", 
    "DimOrder_sql":"select internal_order_id, internal_invoice_number, external_order_id, external_invoice_number, external_trannumber, 'NA' as business_model, source, cast(audit_key as bigint) as audit_key from(select * from (select row_number() over(partition by source_id, external_invoice_number order by 'A') as rank, internal_order_number as internal_order_id, external_purchase_order as external_order_id, internal_invoice_number, external_invoice_number, external_transaction_number as external_trannumber, source_id as source, {0} as audit_key from orders)a where a.rank=1)b",
    "isbn_sql":"select * from (select e_product_id, product_type from {mda_table} union select e_backup_product_id, product_type from {mda_table} union select p_product_id, product_type from {mda_table} union select p_backup_product_id, product_type from {mda_table}) a where length(e_product_id)<=13",
    "FactOrderLine_sql":"select cast(order_skey as bigint) as order_skey, seller_party_skey, buyer_location_skey, product_skey, cast(regexp_replace(reporting_date, '-', '') as int) as reporting_date_skey, trans_type as tran_type, sale_type, product_type as product_format_code, price_currency as list_price_currency, cast(price as decimal(16, 3)) as list_price, price_type as list_price_type, payment_amount_currency as payment_currency, cast(payment_amount as decimal(16, 3)) as payment_amount, units, cast(current_discount_percentage as decimal(5, 3)) as discount_perct, cast('false' as boolean) as is_print_on_demand, cast(b.audit_key as bigint) as audit_key from main_tab a left join dimorder_temp b on trim(a.source_id)=trim(b.source) and a.external_invoice_number=b.external_invoice_number", 
	"fact_orderline_post_operation":"INSERT INTO edw.fact_order_line(order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, units, discount_perct, is_print_on_demand, audit_key) select order_skey, seller_party_skey, buyer_location_skey, product_skey, reporting_date_skey, tran_type, sale_type, product_format_code, list_price_currency, list_price, list_price_type, payment_currency, payment_amount, units, discount_perct, is_print_on_demand, audit_key from {staging_fol_table}"
}
]